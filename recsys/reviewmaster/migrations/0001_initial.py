# Generated by Django 4.1 on 2023-04-19 17:50

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('profile_url', models.URLField(max_length=2000)),
                ('image_url', models.URLField(max_length=2000, null=True)),
                ('name', models.CharField(max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('alias', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('image_url', models.URLField(max_length=2000, null=True)),
                ('is_closed', models.BooleanField()),
                ('url', models.URLField(max_length=2000, null=True)),
                ('review_count', models.IntegerField()),
                ('rating', models.FloatField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('price', models.CharField(choices=[('$', 'cheap'), ('$$', 'mild cheap'), ('$$$', 'expensive'), ('$$$$', 'extremely expensive')], max_length=10)),
                ('address1', models.CharField(max_length=200, null=True)),
                ('address2', models.CharField(max_length=200, null=True)),
                ('address3', models.CharField(max_length=200, null=True)),
                ('city', models.CharField(default=None, max_length=200)),
                ('zip_code', models.CharField(max_length=200)),
                ('country', models.CharField(max_length=200)),
                ('state', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200, null=True)),
                ('phone', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('url', models.URLField(max_length=2000)),
                ('text', models.TextField()),
                ('rating', models.IntegerField(choices=[(1, 'One Star'), (2, 'Two Star'), (3, 'Three Star'), (4, 'Four Star'), (5, 'Five Star')])),
                ('time_created', models.DateTimeField()),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reviewmaster.business')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='business',
            name='users',
            field=models.ManyToManyField(blank=True, through='reviewmaster.Review', to=settings.AUTH_USER_MODEL),
        ),
    ]
